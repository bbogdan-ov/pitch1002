/// Number of CHIP-8 font sprite rows
pub const CHIP_FONT_LEN: usize = 80;
/// Number of UI font sprite rows
pub const UI_FONT_LEN: usize = 230;

/// Contains all the font sprites for CHIP-8 (each char size is 4x5 "pixels")
/// Yoinked from http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.4
pub const CHIP_FONT: [u8; CHIP_FONT_LEN] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

/// Contains the font only for the UI, it won't be used in CHIP-8 games
pub const UI_FONT: [u8; UI_FONT_LEN] = [
    // Unknown char
    0b00000000,
    0b01110000,
    0b01010000,
    0b01110000,
    0b00000000,
    // 0
    0b11110000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11110000,
    // 1
    0b00100000,
    0b01100000,
    0b00100000,
    0b00100000,
    0b01110000,
    // 2
    0b11110000,
    0b00010000,
    0b11110000,
    0b10000000,
    0b11110000,
    // 3
    0b11110000,
    0b00010000,
    0b11110000,
    0b00010000,
    0b11110000,
    // 4
    0b10010000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b00010000,
    // 5
    0b11110000,
    0b10000000,
    0b11110000,
    0b00010000,
    0b11110000,
    // 6
    0b11110000,
    0b10000000,
    0b11110000,
    0b10010000,
    0b11110000,
    // 7
    0b11110000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b01000000,
    // 8
    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b11110000,
    // 9
    0b11110000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b11110000,
    // A
    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b10010000,
    // B
    0b11100000,
    0b10010000,
    0b11100000,
    0b10010000,
    0b11100000,
    // C
    0b11110000,
    0b10000000,
    0b10000000,
    0b10000000,
    0b11110000,
    // D
    0b11100000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11100000,
    // E
    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b11110000,
    // F
    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b10000000,
    // G
    0b11110000,
    0b10000000,
    0b10110000,
    0b10010000,
    0b11110000,
    // H
    0b10010000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b10010000,
    // I
    0b01110000,
    0b00100000,
    0b00100000,
    0b00100000,
    0b01110000,
    // J
    0b01110000,
    0b00100000,
    0b00100000,
    0b10100000,
    0b11100000,
    // K
    0b10010000,
    0b10010000,
    0b11100000,
    0b10010000,
    0b10010000,
    // L
    0b10000000,
    0b10000000,
    0b10000000,
    0b10000000,
    0b11110000,
    // M
    0b11100000,
    0b11110000,
    0b11110000,
    0b10010000,
    0b10010000,
    // N
    0b11100000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b10010000,
    // O
    0b11110000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11110000,
    // P
    0b11110000,
    0b10010000,
    0b11110000,
    0b10000000,
    0b10000000,
    // Q
    0b11110000,
    0b10010000,
    0b10010000,
    0b10110000,
    0b11100000,
    // R
    0b11110000,
    0b10010000,
    0b11110000,
    0b10100000,
    0b10010000,
    // S
    0b11110000,
    0b10000000,
    0b11110000,
    0b00010000,
    0b11110000,
    // T
    0b11110000,
    0b01000000,
    0b01000000,
    0b01000000,
    0b01000000,
    // U
    0b10010000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11110000,
    // V
    0b10010000,
    0b10010000,
    0b10010000,
    0b10100000,
    0b01000000,
    // W
    0b10010000,
    0b10010000,
    0b11110000,
    0b11110000,
    0b11100000,
    // X
    0b10010000,
    0b10010000,
    0b01100000,
    0b10010000,
    0b10010000,
    // Y
    0b10010000,
    0b10100000,
    0b11000000,
    0b10000000,
    0b10000000,
    // Z
    0b11110000,
    0b00010000,
    0b01100000,
    0b10000000,
    0b11110000,
    // !
    0b01000000,
    0b01000000,
    0b01000000,
    0b00000000,
    0b01000000,
    // ?
    0b11110000,
    0b00010000,
    0b01110000,
    0b00000000,
    0b01000000,
    // .
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b01000000,
    // >
    0b10000000,
    0b01000000,
    0b00100000,
    0b01000000,
    0b10000000,
    // <
    0b00100000,
    0b01000000,
    0b10000000,
    0b01000000,
    0b00100000,
    // /
    0b00010000,
    0b00100000,
    0b01000000,
    0b10000000,
    0b10000000,
    // |
    0b01000000,
    0b01000000,
    0b01000000,
    0b01000000,
    0b01000000,
    // \
    0b10000000,
    0b01000000,
    0b00100000,
    0b00010000,
    0b00010000,
    // -
    0b00000000,
    0b00000000,
    0b11110000,
    0b00000000,
    0b00000000,
];
